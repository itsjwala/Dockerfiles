# This is a basic workflow to help you get started with Actions

name: push images to ghcr

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:   
  build:    
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - context: caddy-cloudflare-plugin
            image: itsjwala/caddy
          - context: samba
            image: itsjwala/samba
    env:      
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE: ${{ matrix.image }}
      BUILD_CONTEXT: ${{ matrix.context }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7,linux/amd64,linux/arm64
    steps:    
      - name: Checkout the code       
        uses: actions/checkout@v1              
      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          buildx-version: latest          
      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_IMAGE}       
          echo ::set-output name=build_context::${BUILD_CONTEXT}
          echo ::set-output name=buildx-version::${GITHUB_RUN_NUMBER}
      - name: Docker Login      
        if: success()      
        run: |        
          echo ${{ secrets.PAT }} | docker login $DOCKER_REGISTRY -u $GITHUB_ACTOR --password-stdin
      - name: Run Buildx (push image)      
        if: success()     
        run: |        
          docker login && \
          docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platform }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:latest \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.buildx-version }} \
          --push ${{ steps.prepare.outputs.build_context }}
